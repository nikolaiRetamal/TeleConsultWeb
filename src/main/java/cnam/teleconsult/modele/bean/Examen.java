package cnam.teleconsult.modele.bean;
// Generated 24 août 2016 08:19:15 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Examen generated by hbm2java
 */
@Entity
@Table(name = "examen", catalog = "teleconsult")
public class Examen implements java.io.Serializable {

	private Integer examenId;
	private Dmpcpersonnelsante dmpcpersonnelsante;
	private String examenNom;
	private Set<Resultat> resultats = new HashSet<Resultat>(0);

	public Examen() {
	}

	public Examen(Dmpcpersonnelsante dmpcpersonnelsante, String examenNom) {
		this.dmpcpersonnelsante = dmpcpersonnelsante;
		this.examenNom = examenNom;
	}

	public Examen(Dmpcpersonnelsante dmpcpersonnelsante, String examenNom, Set<Resultat> resultats) {
		this.dmpcpersonnelsante = dmpcpersonnelsante;
		this.examenNom = examenNom;
		this.resultats = resultats;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EXAMEN_ID", unique = true, nullable = false)
	public Integer getExamenId() {
		return this.examenId;
	}

	public void setExamenId(Integer examenId) {
		this.examenId = examenId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PERSONNELSANTE_ID", nullable = false)
	public Dmpcpersonnelsante getDmpcpersonnelsante() {
		return this.dmpcpersonnelsante;
	}

	public void setDmpcpersonnelsante(Dmpcpersonnelsante dmpcpersonnelsante) {
		this.dmpcpersonnelsante = dmpcpersonnelsante;
	}

	@Column(name = "EXAMEN_NOM", nullable = false, length = 20)
	public String getExamenNom() {
		return this.examenNom;
	}

	public void setExamenNom(String examenNom) {
		this.examenNom = examenNom;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "examen")
	public Set<Resultat> getResultats() {
		return this.resultats;
	}

	public void setResultats(Set<Resultat> resultats) {
		this.resultats = resultats;
	}

}
