package cnam.teleconsult.modele.bean;
// Generated 24 août 2016 08:19:15 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Dmpcstructuresante generated by hbm2java
 */
@Entity
@Table(name = "dmpcstructuresante", catalog = "teleconsult")
public class Dmpcstructuresante implements java.io.Serializable {

	private Integer structuresanteId;
	private Dmpcadresse dmpcadresse;
	private String structuresanteNom;
	private String structuresanteLogin;
	private String structuresanteMdp;
	private String structuresanteEmail;
	private Set<Dmpcpersonnelsante> dmpcpersonnelsantes = new HashSet<Dmpcpersonnelsante>(0);
	private Set<Dmpcpersonnelsante> dmpcpersonnelsantes_1 = new HashSet<Dmpcpersonnelsante>(0);

	public Dmpcstructuresante() {
	}

	public Dmpcstructuresante(Dmpcadresse dmpcadresse, String structuresanteNom, String structuresanteLogin,
			String structuresanteMdp, String structuresanteEmail) {
		this.dmpcadresse = dmpcadresse;
		this.structuresanteNom = structuresanteNom;
		this.structuresanteLogin = structuresanteLogin;
		this.structuresanteMdp = structuresanteMdp;
		this.structuresanteEmail = structuresanteEmail;
	}

	public Dmpcstructuresante(Dmpcadresse dmpcadresse, String structuresanteNom, String structuresanteLogin,
			String structuresanteMdp, String structuresanteEmail, Set<Dmpcpersonnelsante> dmpcpersonnelsantes,
			Set<Dmpcpersonnelsante> dmpcpersonnelsantes_1) {
		this.dmpcadresse = dmpcadresse;
		this.structuresanteNom = structuresanteNom;
		this.structuresanteLogin = structuresanteLogin;
		this.structuresanteMdp = structuresanteMdp;
		this.structuresanteEmail = structuresanteEmail;
		this.dmpcpersonnelsantes = dmpcpersonnelsantes;
		this.dmpcpersonnelsantes_1 = dmpcpersonnelsantes_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "STRUCTURESANTE_ID", unique = true, nullable = false)
	public Integer getStructuresanteId() {
		return this.structuresanteId;
	}

	public void setStructuresanteId(Integer structuresanteId) {
		this.structuresanteId = structuresanteId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ADRESSE_ID", nullable = false)
	public Dmpcadresse getDmpcadresse() {
		return this.dmpcadresse;
	}

	public void setDmpcadresse(Dmpcadresse dmpcadresse) {
		this.dmpcadresse = dmpcadresse;
	}

	@Column(name = "STRUCTURESANTE_NOM", nullable = false, length = 20)
	public String getStructuresanteNom() {
		return this.structuresanteNom;
	}

	public void setStructuresanteNom(String structuresanteNom) {
		this.structuresanteNom = structuresanteNom;
	}

	@Column(name = "STRUCTURESANTE_LOGIN", nullable = false, length = 20)
	public String getStructuresanteLogin() {
		return this.structuresanteLogin;
	}

	public void setStructuresanteLogin(String structuresanteLogin) {
		this.structuresanteLogin = structuresanteLogin;
	}

	@Column(name = "STRUCTURESANTE_MDP", nullable = false, length = 20)
	public String getStructuresanteMdp() {
		return this.structuresanteMdp;
	}

	public void setStructuresanteMdp(String structuresanteMdp) {
		this.structuresanteMdp = structuresanteMdp;
	}

	@Column(name = "STRUCTURESANTE_EMAIL", nullable = false, length = 200)
	public String getStructuresanteEmail() {
		return this.structuresanteEmail;
	}

	public void setStructuresanteEmail(String structuresanteEmail) {
		this.structuresanteEmail = structuresanteEmail;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "dmpcstructuresante_medecin", catalog = "teleconsult", joinColumns = {
			@JoinColumn(name = "STRUCTURESANTE_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "PERSONNELSANTE_ID", nullable = false, updatable = false) })
	public Set<Dmpcpersonnelsante> getDmpcpersonnelsantes() {
		return this.dmpcpersonnelsantes;
	}

	public void setDmpcpersonnelsantes(Set<Dmpcpersonnelsante> dmpcpersonnelsantes) {
		this.dmpcpersonnelsantes = dmpcpersonnelsantes;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "dmpcstructuresante_referent", catalog = "teleconsult", joinColumns = {
			@JoinColumn(name = "STRUCTURESANTE_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "PERSONNELSANTE_ID", nullable = false, updatable = false) })
	public Set<Dmpcpersonnelsante> getDmpcpersonnelsantes_1() {
		return this.dmpcpersonnelsantes_1;
	}

	public void setDmpcpersonnelsantes_1(Set<Dmpcpersonnelsante> dmpcpersonnelsantes_1) {
		this.dmpcpersonnelsantes_1 = dmpcpersonnelsantes_1;
	}
	


    //Fonctions de surchage afin de clarifier les méthodes automatiquement générées
	
	/**
	 * 
	 * Remonte la liste des médecins de ville de la structure de santé
	 * 
	 * @return
	 */
	@Transient
	public List<Dmpcpersonnelsante> getListeMedecin() {

		ArrayList<Dmpcpersonnelsante> result = new ArrayList<Dmpcpersonnelsante>();
		result.addAll(getDmpcpersonnelsantes());
				
		return result;
	}
	
	/**
	 * 
	 * Ajoute un médecin à la liste des médecins de la structure de santé
	 * 
	 * @param medecin
	 */
	public void ajouteMedecin (Dmpcpersonnelsante medecin){
		this.dmpcpersonnelsantes.add(medecin);
	}

	/**
	 * 
	 * Remonte la liste des référents de la structure de santé
	 * 
	 * @return
	 */
	@Transient
	public List<Dmpcpersonnelsante> getListeReferent() {	
		
		ArrayList<Dmpcpersonnelsante> result = new ArrayList<Dmpcpersonnelsante>();
		result.addAll(getDmpcpersonnelsantes_1());
				
		return result;
	}
	
	/**
	 * 
	 * Ajoute un référent à la liste des référents de la structure de santé
	 * 
	 * @param referent
	 */
	public void ajouteReferent (Dmpcpersonnelsante referent){
		this.dmpcpersonnelsantes_1.add(referent);
	}
	

}
